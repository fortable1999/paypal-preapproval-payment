"""
payment admin page generated by template

template author: Meng Zhao fortable1999@gmail.com
"""


from django.db import models
from django.core.urlresolvers import reverse_lazy as reverse
from django.utils.translation import ugettext as _

from django_extensions.db.fields import UUIDField

from payment.models.choices import CURRENCY_CODE_CHOICES, ACTION_TYPE_CHOICES


class PreapprovalPaymentManager(models.Manager):
    """
    Payment Manager:
    to create a payment: payment.objects.create()
    """

    def create_payment(self, **kwargs):
        """
        Create a payment use Paypal API
        """
        pass
        


class PreapprovalPayment(models.Model):
    """
    payment model for Paypal payment
    """
    objects = PreapprovalPaymentManager()

    # Primary key use UUID
    # 
    payment_id = UUIDField(primary_key=True)

    # Paypal required fields

    # Preapproval fields:
    starting_date = models.DateTimeField()
    ending_date = models.DateTimeField()
    max_total_amount = models.FloatField()

    # Receiver will be primary receiver.
    # Receiver take *amount* money, 
    # and we take left money
    # receverList.receiver(0).email = receiver.email
    # receverList.receiver(0).amount = amount
    # receverList.receiver(0).primary = true
    # receverList.receiver(1).email = 'platform' 
    # receverList.receiver(1).amount = left 
    # receverList.receiver(1).primary = false 
    receiver = models.ForeignKey('auth.User') # Need user's paypal account
    amount = models.FloatField('auth.User') # 

    currency_code = models.CharField(
        max_length=3, 
        choices=CURRENCY_CODE_CHOICES
    )

    returl_url = models.URLField() # max_length default 200 char
    cancel_url = models.URLField() # max_length default 200 char

    # must be "en_US"
    error_language = models.CharField(max_length=8, default='en_US')

    # Application fields
    to_project = models.ManyToManyField(
        'project.Project',
        _("project"),
        related_name = "payments",
    )

    created_datetime = models.DateTimeField(
        _("created datetime"),
        auto_now_add=True)

    updated_datetime = models.DateTimeField(
        _("updated datetime"),
        auto_now=True)

    def get_absolute_url(self):
        """
        return detail page url
        """
        return reverse('payment_detail', kwargs={'pk': self.pk})

    def __unicode__(self):
        """
        <CAUTION>
        this will be used to indicate a model object.
        it should never be long that 200 charactor when you use admin!
        """
        return "<Payment Object>"

    # Paypal action
    def execute(self):
        """docstring for execute"""
        pass

    class Meta:
        """
        <Usually used meta options>
        """
        ordering = (
            "created_datetime",
        )
        get_latest_by = "created_datetime"

